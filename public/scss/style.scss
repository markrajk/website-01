@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
// ==================================
// VARIABLES
// ==================================
:root {
  --white: #fff;
  --black: #000;
  --green-light: #16b92b;
  --green-dark: #148e42;
  --blue-primary: #1878de;
  --orange-primary: #ffbb03;
  --line-dark: #efefef;
  --text-headers: #2d3339;
  --text-body-dark: #434a51;
  --text-body-medium: #686d73;
}

// ==================================
// MIXINS & FUNCTIONS
// ==================================

@function resize($base, $value) {
  $result: $base * $value;
  @return $result;
}

@function emcalc($base, $value) {
  $result: $base / $value;
  @return $result * 1em;
}

@mixin custom-respond($value) {
  @media (max-width: $value * 1px) {
    @content;
  }
}

@mixin custom-respond-vertical($value) {
  @media (max-height: $value * 1px) {
    @content;
  }
}

@mixin custom-respond-range($value1, $value2) {
  @media (min-width: $value1 * 1px) and (max-width: $value2 * 1px) {
    @content;
  }
}

@mixin custom-respond-vertical($value) {
  @media (max-height: $value * 1px) {
    @content;
  }
}

@mixin respond($breakpoint) {
  @if $breakpoint==desktop-xxsm {
    @media (max-width: 379px) {
      @content;
    }
  }

  @if $breakpoint==desktop-xsm {
    @media (max-width: 575px) {
      @content;
    }
  }

  @if $breakpoint==desktop-sm {
    @media (max-width: 767px) {
      @content;
    }
  }

  @if $breakpoint==desktop-md {
    @media (max-width: 991px) {
      @content;
    }
  }

  @if $breakpoint==desktop-lg {
    @media (max-width: 1199px) {
      @content;
    }
  }

  @if $breakpoint==desktop-xl {
    @media (max-width: 1379px) {
      @content;
    }
  }

  @if $breakpoint==desktop-xxl {
    @media (max-width: 1720px) {
      @content;
    }
  }

  @if $breakpoint==desktop-xxxl {
    @media (max-width: 1900px) {
      @content;
    }
  }
}

@function resize($base, $value) {
  $result: $base * $value;
  @return $result;
}

@function emcalc($base, $value) {
  $result: $base / $value;
  @return $result * 1em;
}

// Flexbox Mixins
// http://philipwalton.github.io/solved-by-flexbox/
// https://github.com/philipwalton/solved-by-flexbox
//
// Copyright (c) 2013 Brian Franco
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
// This is a set of mixins for those who want to mess around with flexbox
// using the native support of current browsers. For full support table
// check: http://caniuse.com/flexbox
//
// Basically this will use:
//
// * Fallback, old syntax (IE10, mobile webkit browsers - no wrapping)
// * Final standards syntax (FF, Safari, Chrome, IE11, Opera)
//
// This was inspired by:
//
// * http://dev.opera.com/articles/view/advanced-cross-browser-flexbox/
//
// With help from:
//
// * http://w3.org/tr/css3-flexbox/
// * http://the-echoplex.net/flexyboxes/
// * http://msdn.microsoft.com/en-us/library/ie/hh772069(v=vs.85).aspx
// * http://css-tricks.com/using-flexbox/
// * http://dev.opera.com/articles/view/advanced-cross-browser-flexbox/
// * https://developer.mozilla.org/en-us/docs/web/guide/css/flexible_boxes

//----------------------------------------------------------------------

// Flexbox Containers
//
// The 'flex' value causes an element to generate a block-level flex
// container box.
//
// The 'inline-flex' value causes an element to generate a inline-level
// flex container box.
//
// display: flex | inline-flex
//
// http://w3.org/tr/css3-flexbox/#flex-containers
//
// (Placeholder selectors for each type, for those who rather @extend)

@mixin flexbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin inline-flex {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -moz-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

@mixin flex-direction($value: row) {
  @if $value==row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
  } @else if $value==column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
  } @else if $value==column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
  } @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
  }

  -webkit-flex-direction: $value;
  -moz-flex-direction: $value;
  -ms-flex-direction: $value;
  flex-direction: $value;
}

// Shorter version:
@mixin flex-dir($args...) {
  @include flex-direction($args...);
}

@mixin flex-wrap($value: nowrap) {
  // No Webkit Box fallback.
  -webkit-flex-wrap: $value;
  -moz-flex-wrap: $value;

  @if $value==nowrap {
    -ms-flex-wrap: none;
  } @else {
    -ms-flex-wrap: $value;
  }

  flex-wrap: $value;
}

@mixin flex-flow(
  $values: (
    row nowrap,
  )
) {
  // No Webkit Box fallback.
  -webkit-flex-flow: $values;
  -moz-flex-flow: $values;
  -ms-flex-flow: $values;
  flex-flow: $values;
}

@mixin order($int: 0) {
  -webkit-box-ordinal-group: $int + 1;
  -webkit-order: $int;
  -moz-order: $int;
  -ms-flex-order: $int;
  order: $int;
}

@mixin flex-grow($int: 0) {
  -webkit-box-flex: $int;
  -webkit-flex-grow: $int;
  -moz-flex-grow: $int;
  -ms-flex-positive: $int;
  flex-grow: $int;
}

@mixin flex-shrink($int: 1) {
  -webkit-flex-shrink: $int;
  -moz-flex-shrink: $int;
  -ms-flex-negative: $int;
  flex-shrink: $int;
}

@mixin flex-basis($value: auto) {
  -webkit-flex-basis: $value;
  -moz-flex-basis: $value;
  -ms-flex-preferred-size: $value;
  flex-basis: $value;
}

@mixin flex($fg: 1, $fs: null, $fb: null) {
  $fg-boxflex: $fg;

  @if type-of($fg) == 'list' {
    $fg-boxflex: nth($fg, 1);
  }

  -webkit-box-flex: $fg-boxflex;
  -webkit-flex: $fg $fs $fb;
  -moz-box-flex: $fg-boxflex;
  -moz-flex: $fg $fs $fb;
  -ms-flex: $fg $fs $fb;
  flex: $fg $fs $fb;
}

@mixin justify-content($value: flex-start) {
  @if $value==flex-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
  } @else if $value==flex-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
  } @else if $value==space-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
  } @else if $value==space-around {
    -ms-flex-pack: distribute;
  } @else {
    -webkit-box-pack: $value;
    -ms-flex-pack: $value;
  }

  -webkit-justify-content: $value;
  -moz-justify-content: $value;
  justify-content: $value;
}

@mixin flex-just($args...) {
  @include justify-content($args...);
}

@mixin align-items($value: stretch) {
  @if $value==flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
  } @else if $value==flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
  } @else {
    -webkit-box-align: $value;
    -ms-flex-align: $value;
  }

  -webkit-align-items: $value;
  -moz-align-items: $value;
  align-items: $value;
}

@mixin align-self($value: auto) {
  // No Webkit Box Fallback.
  -webkit-align-self: $value;
  -moz-align-self: $value;

  @if $value==flex-start {
    -ms-flex-item-align: start;
  } @else if $value==flex-end {
    -ms-flex-item-align: end;
  } @else {
    -ms-flex-item-align: $value;
  }

  align-self: $value;
}

@mixin align-content($value: stretch) {
  -webkit-align-content: $value;
  -moz-align-content: $value;

  @if $value==flex-start {
    -ms-flex-line-pack: start;
  } @else if $value==flex-end {
    -ms-flex-line-pack: end;
  } @else {
    -ms-flex-line-pack: $value;
  }

  align-content: $value;
}

// https://css-tricks.com/browser-compatibility-css-grid-layouts-simple-sass-mixins/
@mixin grid {
  display: -ms-grid;
  display: grid;
}

@mixin grid-template-columns($columns...) {
  -ms-grid-columns: $columns;
  grid-template-columns: $columns;
}

@mixin grid-template-rows($rows...) {
  -ms-grid-rows: $rows;
  grid-template-rows: $rows;
}

@function grid-repeat($repeat, $stuff: 1fr) {
  $list: ();

  @for $i from 1 through $repeat {
    $list: append($list, $stuff, space);
  }

  @return $list;
}

@mixin grid-column($col-start, $col-end) {
  -ms-grid-column: $col-start;
  -ms-grid-column-span: $col-end - $col-start;
  grid-column: #{$col-start} / #{$col-end};
}

@mixin grid-row($row-start, $row-end) {
  -ms-grid-row: $row-start;
  -ms-grid-row-span: $row-end - $row-start;
  grid-row: #{$row-start} / #{$row-end};
}

@mixin grid-align-self($value) {
  -ms-grid-row-align: $value;
  align-self: $value;
}

@mixin grid-justify-self($value) {
  -ms-grid-column-align: $value;
  justify-self: $value;
}

@mixin target-ie {
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    @content;
  }

  @supports (-ms-ime-align: auto) {
    @content;
  }
}

// ==================================
// TEXT STYLE MIXINS
// ==================================
@mixin h1($value: em) {
  @if $value == em {
    font-size: 4.2em;
  } @else {
    font-size: 4.2rem;
  }
  font-weight: 700;
  line-height: 1.31;
  letter-spacing: 0.11px;
  color: var(--black);
}

@mixin h2($value: em) {
  @if $value == em {
    font-size: 4em;
  } @else {
    font-size: 4rem;
  }
  font-weight: 700;
  line-height: 1.3;
  letter-spacing: normal;
  color: var(--text-headers);
}

@mixin h3($value: em) {
  @if $value == em {
    font-size: 3.6em;
  } @else {
    font-size: 3.6rem;
  }
  font-weight: 700;
  line-height: 1.33;
  letter-spacing: normal;
  color: var(--black);
}

@mixin h4($value: em) {
  @if $value == em {
    font-size: 3.4em;
  } @else {
    font-size: 3.4rem;
  }
  font-weight: 700;
  line-height: 1.29;
  letter-spacing: normal;
  color: var(--text-headers);
}

@mixin h5($value: em) {
  @if $value == em {
    font-size: 3em;
  } @else {
    font-size: 3rem;
  }
  font-weight: 700;
  line-height: 1.33;
  letter-spacing: normal;
  color: var(--text-headers);
}

@mixin logo($value: em) {
  @if $value == em {
    font-size: 2.45em;
  } @else {
    font-size: 2.45rem;
  }
  font-weight: 700;
  line-height: normal;
  letter-spacing: -0.74px;
  color: #272e39;
}

@mixin body-large($value: em) {
  @if $value == em {
    font-size: 1.6em;
  } @else {
    font-size: 1.6rem;
  }
  font-weight: 400;
  line-height: 2;
  letter-spacing: 0.04px;
  color: var(--black);
}

@mixin body-medium($value: em) {
  @if $value == em {
    font-size: 1.55em;
  } @else {
    font-size: 1.55rem;
  }
  font-weight: 400;
  line-height: 1.81;
  letter-spacing: normal;
  color: #2d353c;
}

@mixin body-small($value: em) {
  @if $value == em {
    font-size: 1.5em;
  } @else {
    font-size: 1.5rem;
  }
  font-weight: 400;
  line-height: 1.6;
  letter-spacing: normal;
  color: #333e48;
}

@mixin overline($value: em) {
  @if $value == em {
    font-size: 1.5em;
  } @else {
    font-size: 1.5rem;
  }
  font-weight: 700;
  line-height: 1.2;
  letter-spacing: normal;
  color: #ffb42d;
}

@mixin banner($value: em) {
  @if $value == em {
    font-size: 1.4em;
  } @else {
    font-size: 1.4rem;
  }
  font-weight: 500;
  line-height: 3.71;
  letter-spacing: normal;
  color: var(--green-dark);
}

@mixin caption($value: em) {
  @if $value == em {
    font-size: 1.2em;
  } @else {
    font-size: 1.2rem;
  }
  font-weight: 500;
  line-height: 2.17;
  letter-spacing: 0.09px;
  color: var(--text-body-medium);
}

@mixin button-large($value: em) {
  @if $value == em {
    font-size: 1.5em;
  } @else {
    font-size: 1.5rem;
  }
  font-weight: 600;
  letter-spacing: 0.19px;
  color: var(--white);
}

@mixin button-medium($value: em) {
  @if $value == em {
    font-size: 1.4em;
  } @else {
    font-size: 1.4rem;
  }
  font-weight: 600;
  letter-spacing: 0.04px;
  color: var(--white);
}

@mixin button-small($value: em) {
  @if $value == em {
    font-size: 1.3em;
  } @else {
    font-size: 1.3rem;
  }
  font-weight: 600;
  letter-spacing: 0.2px;
  color: var(--white);
}

@mixin button-text($value: em) {
  @if $value == em {
    font-size: 1.45em;
  } @else {
    font-size: 1.45rem;
  }
  font-weight: 600;
  letter-spacing: normal;
  color: #333e48;
}

// ==================================
// GENERAL SETTINGS
// ==================================
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  font-size: 62.5%;
}

body {
  box-sizing: border-box;
  font-family: 'Inter', sans-serif;
  font-size: 1rem;

  overflow-y: auto;
  scrollbar-width: none;
  -ms-overflow-style: none;

  &::-webkit-scrollbar {
    width: 0;
    height: 0;
  }
}

button {
  background-color: transparent;
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  color: inherit;
  border: 0;
  outline: none;
}

input {
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  -o-appearance: none;
  appearance: none;
  font: inherit;
}

textarea {
  font-size: inherit;
  font-family: inherit;
  font: inherit;
  resize: none;
  outline: none;
}

// ==================================
// BUTTONS
// ==================================
.button {
  @include inline-flex();
  @include align-items(center);
  @include justify-content(center);
  cursor: pointer;
  border-radius: 5px;
  white-space: nowrap;
  border: 2px solid transparent;

  &-green {
    background-color: var(--green-light);
    border-color: var(--green-light);

    &.large {
      @include button-large();
    }
    &.medium {
      @include button-medium();
    }
    &.small {
      @include button-small();
    }
  }

  &-green-outline {
    background-color: var(--white);
    border-color: var(--green-light);
    color: var(--green-light) !important;

    &.large {
      @include button-large();
    }
    &.medium {
      @include button-medium();
    }
    &.small {
      @include button-small();
    }
  }

  &-link {
    color: var(--text-body-dark);
  }
}

// ==================================
// UTILITY
// ==================================
.container {
  padding: 0 10.42%;
}

// ==================================
// HEADER
// ==================================
.header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 1000;
  background-color: #fff;

  & .nav {
    padding: 0 4em;
    height: 7.2em;
    @include flexbox();
    @include align-items(center);
    @include justify-content(space-between);
    background-color: var(--white);
    border: solid 1px var(--line-dark);
    box-shadow: 0 3px 6px 0 rgba(203, 203, 203, 0.16);

    &-logo {
      min-width: 22.6em;
      @include flexbox();
      @include align-items(center);
      @include justify-content(flex-start);
      cursor: pointer;

      &-img {
        margin-right: 0.75em;
        min-width: 3em;
        min-height: 3em;
        width: 3em;
        height: 3em;
        max-width: 3em;
        max-height: 3em;
        object-fit: cover;
      }

      &-name {
        @include logo();
      }
    }

    &-list {
      width: 100%;
      max-width: 51.6em;
      @include flexbox();
      @include align-items(center);
      @include justify-content(space-between);
      list-style: none;

      &-item {
        &:not(:last-of-type) {
          margin-right: 1.5em;
        }

        &-link {
          @include inline-flex();
          @include align-items(center);
          @include justify-content(flex-start);
          font-size: 1.4em;
          font-weight: 500;
          letter-spacing: 0.04px;
          color: var(--text-body-dark);
          cursor: pointer;

          & i {
            margin-left: 0.5rem;
            font-size: emcalc(0.9, 1.4);
            color: var(--text-body-dark);
          }
        }
      }
    }

    &-buttons {
      min-width: 22.6em;
      @include flexbox();
      @include align-items(center);
      @include justify-content(flex-end);

      & .button {
        &-link {
          margin-right: emcalc(2.5, 1.4);
          font-size: 1.4em;
          font-weight: 500;
          letter-spacing: 0.04px;
        }

        &-green {
          padding: 0 1.7rem;
          height: 4rem;

          & i {
            margin-left: 0.5rem;
            font-size: 1rem;
          }
        }
      }
    }
  }
}

.main {
  padding-top: 13.8em;
}

.hero {
  position: relative;
  // padding-top: 13.8em;
  padding-bottom: 4.5em;
  @include flexbox();
  @include flex-direction(column);
  @include align-items(center);
  @include justify-content(center);
  text-align: center;

  &-banner {
    padding: 0 2.57em;
    @include flexbox();
    @include align-items(center);
    @include justify-content(center);
    position: fixed;
    top: 7.2em;
    left: 0;
    width: 100%;
    height: 5.8em;
    background-color: #e3f7eb;
    z-index: 1000;

    &-text {
      @include banner();

      & button,
      & span,
      & a {
        color: #006fd4;
        cursor: pointer;

        &:hover {
          text-decoration: underline;
        }
      }
    }

    & i {
      position: absolute;
      top: 50%;
      right: 2.57rem;
      transform: translate(0, -50%);
      font-size: 1.2em;
      color: var(--green-dark);
      cursor: pointer;
    }
  }

  &-title {
    @include h1();
    margin-bottom: emcalc(3.2, 4.2);
  }

  &-text {
    max-width: emcalc(64.2, 1.6);
    @include body-large();
    margin-bottom: emcalc(3.2, 1.6);
  }

  & .button-green {
    margin-bottom: emcalc(2.6, 1.5);
    padding: 0 emcalc(2.8, 1.5);
    height: emcalc(5, 1.5);
  }

  &-caption {
    @include caption();
  }
}

.feature {
  padding-top: 4em;
  padding-bottom: 4em;
  @include flexbox();
  @include align-items(center);
  @include justify-content(center);

  &.left {
    & .feature-media {
      margin-right: 13.4em;
    }

    & .phone-01 {
      top: 0;
      left: 0;
    }

    & .phone-02 {
      bottom: 0;
      right: 1.1em;
    }
  }

  &.right {
    @include flex-direction(row-reverse);
    & .feature-media {
      margin-left: 13.4em;
    }

    & .phone-01 {
      bottom: 0;
      left: 0;
    }

    & .phone-02 {
      top: 0;
      right: 1.1em;
    }
  }

  &.single {
    & .feature-media {
      min-width: 47.5em;
      min-height: 58.6em;
      width: 47.5em;
      height: 47.5em;
      max-width: 47.5em;
      max-height: 47.5em;

      &-circle {
        top: 50%;
        left: 50%;
        right: auto;
        transform: translate(-50%, -50%);
        min-width: 47.5em;
        min-height: 47.5em;
        width: 47.5em;
        height: 47.5em;
        max-width: 47.5em;
        max-height: 47.5em;
      }

      &-phone {
        width: 31.6em;
        height: 58.6em;
      }
    }
    & .phone-01 {
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
  }

  &-media {
    position: relative;
    min-width: 57.5em;
    min-height: 57.5em;
    width: 57.5em;
    height: 57.5em;
    max-width: 57.5em;
    max-height: 57.5em;

    &-circle {
      position: absolute;
      top: 0;
      right: 0;
      min-width: 46em;
      min-height: 46em;
      width: 46em;
      height: 46em;
      max-width: 46em;
      max-height: 46em;
      background-image: linear-gradient(to bottom, #ffdb45, #ffb11f);
      border-radius: 100vh;
    }

    &-phone {
      position: absolute;
      width: 28.2em;
      height: 52.3em;
      @include flexbox();
      @include align-items(center);
      @include justify-content(center);

      &-content {
        width: 80.14%;
        height: auto;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        object-fit: cover;
      }

      &-frame {
        width: 100%;
        height: auto;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        object-fit: cover;
      }
    }
  }

  &-main {
    &-subtitle {
      margin-bottom: emcalc(0.8, 1.5);
      @include overline();
    }

    &-title {
      width: 100%;
      margin-bottom: emcalc(3.2, 3.4);
      @include h4();
    }

    &-text {
      width: 100%;
      margin-bottom: emcalc(3.6, 1.6);
      @include body-medium();
    }

    &-link {
      font-size: 1.55em;
      font-weight: 600;
      letter-spacing: normal;
      color: var(--blue-primary);
      cursor: pointer;

      &:hover {
        text-decoration: underline;
      }
    }
  }
}

.showcase {
  padding-top: 8.7em;
  padding-bottom: 7.5em;
  text-align: center;
  background-image: linear-gradient(to top, #ffffff, #fdfdfd 49%, #f7f8fa);

  &-header {
    @include flexbox();
    @include flex-direction(column);
    @include align-items(center);
    @include justify-content(flex-start);

    &-subtitle {
      margin-bottom: emcalc(0.8, 1.6);
      @include overline();
    }

    &-title {
      margin-bottom: emcalc(2.4, 3.6);
      @include h3();

      & i {
        margin: 0 0.5rem;
        font-size: emcalc(2.7, 3.6);
      }
    }

    &-text {
      margin-bottom: emcalc(2.9, 1.5);
      width: 100%;
      max-width: emcalc(58.6, 1.5);
      @include body-medium();
    }
  }

  &-main {
    &-header {
      &-nav {
        position: relative;
        @include flexbox();
        @include align-items(center);
        @include justify-content(center);

        &-item {
          @include flexbox();
          @include align-items(center);
          @include justify-content(center);
          cursor: pointer;

          &:not(:last-of-type) {
            margin-right: 4.5em;
          }

          &.active {
            & .showcase-main-header-nav-item-link {
              color: var(--green-light);
            }
          }

          &-link {
            font-size: 1.45em;
            font-weight: 600;
            letter-spacing: normal;
            color: #333e48;
            cursor: pointer;
          }
        }

        &-line {
          position: absolute;
          bottom: -10px;
          width: 119px;
          height: 0;
          margin: 11px 0 0;
          border-top: solid 3px var(--green-light);
          //transition: left .3s cubic-bezier(.17,.67,.39,.89), width .3s cubic-bezier(.17,.67,.39,.89);
        }
      }
    }

    & .showcase-media {
      padding-top: 4.2em;
      @include flexbox();
      @include align-items(flex-start);
      @include justify-content(center);

      &-phone {
        position: relative;
        width: 28.2em;
        height: 52.3em;
        @include flexbox();
        @include align-items(center);
        @include justify-content(center);

        &:not(:last-of-type) {
          margin-right: 1.6em;
        }

        &-content {
          width: 80.14%;
          height: auto;
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          object-fit: cover;
        }

        &-frame {
          width: 100%;
          height: auto;
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          object-fit: cover;
        }
      }
    }
  }
}

.dashboard {
  padding-top: 6.4em;
  padding-bottom: 6em;
  @include flexbox();
  @include flex-direction(column);
  @include align-items(center);
  @include justify-content(center);
  text-align: center;
  background-image: linear-gradient(to top, #ffffff, #fdfdfd 49%, #f7f8fa);

  &-subtitle {
    margin-bottom: emcalc(0.8, 1.8);
    @include overline();
  }

  &-title {
    margin-bottom: emcalc(2.4, 3.6);
    @include h3();
  }

  &-text {
    width: 100%;
    @include body-medium();

    &.text-01 {
      margin-bottom: emcalc(3.2, 1.5);
      max-width: emcalc(52, 1.5);
    }

    &.text-02 {
      margin-bottom: emcalc(2.8, 1.5);
      max-width: emcalc(64.5, 1.5);
    }
  }

  &-img {
    margin-bottom: 4.2em;
    width: 100%;
    max-width: 86em;
    height: auto;
    object-fit: cover;
  }

  &-buttons {
    margin-bottom: 3.2em;
    @include flexbox();
    @include align-items(center);
    @include justify-content(center);

    & .button {
      padding: 0 emcalc(2.2, 1.4);
      height: emcalc(4.2, 1.4);

      &:not(:last-of-type) {
        margin-right: emcalc(2.8, 1.4);
      }

      &-link {
        font-size: 1.4em;
        font-weight: 400;
        letter-spacing: 0.04px;
        color: #1b2026;

        &:hover {
          text-decoration: underline;
        }
      }
    }
  }

  &-link {
    font-size: 1.5em;
    font-weight: 600;
    letter-spacing: normal;
    color: var(--blue-primary);
    cursor: pointer;

    &:hover {
      text-decoration: underline;
    }
  }
}

.cards {
  padding: 4em 6.94% 9.4em;
  @include flexbox();
  @include align-items(center);
  @include justify-content(center);
  background-color: var(--white);

  & .card {
    padding: 4.8em 2em;
    width: 100%;
    max-width: 38em;
    @include flexbox();
    @include flex-direction(column);
    @include align-items(center);
    @include justify-content(center);
    border-radius: 22.5px;
    background-color: #f8f8f8;
    text-align: center;

    &:not(:last-of-type) {
      margin-right: 5em;
    }

    &-subtitle {
      margin-bottom: emcalc(1.2, 1.4);
      font-size: 1.4em;
      font-weight: 600;
      color: #0c0e10;
    }

    &-title {
      margin-bottom: emcalc(3.4, 2);
      width: 100%;
      max-width: emcalc(20, 2);
      font-size: 2em;
      font-weight: 600;
      line-height: 1.4;
      letter-spacing: normal;
      color: #0c0e10;
    }

    & .button {
      width: 100%;
      max-width: emcalc(18, 1.4);
      height: emcalc(4, 1.4);
    }
  }
}

.get-started {
  padding-top: 8em;
  padding-bottom: 8em;
  @include flexbox();
  @include flex-direction(column);
  @include align-items(center);
  @include justify-content(center);
  background-color: #f8f8f8;
  text-align: center;

  &-title {
    margin-bottom: emcalc(3.2, 3.6);
    @include h3();
  }

  &-text {
    margin-bottom: emcalc(3.2, 1.5);
    width: 100%;
    @include body-medium();
  }

  & .button {
    padding: 0 emcalc(3.1, 1.5);
    margin-bottom: emcalc(3.2, 1.5);
    height: emcalc(5, 1.5);
  }

  &-caption {
    @include caption();
  }
}

.footer {
  padding: 4.9em 10em 0;

  &.dark {
    border-top: solid 1px var(--line-dark);
    background-color: #f8f8f8;
  }

  &-main {
    margin-bottom: 8.1em;
    @include flexbox();
    @include align-items(flex-start);
    @include justify-content(space-between);

    &-brand {
      &-img {
        margin-bottom: 2.2em;
        min-width: 6.2em;
        min-height: 6.2em;
        width: 6.2em;
        height: 6.2em;
        max-width: 6.2em;
        max-height: 6.2em;
      }

      &-name {
        margin-bottom: emcalc(0.9, 1.4);
        font-size: 1.4em;
        font-weight: 700;
        letter-spacing: normal;
        color: #333e48;
      }

      &-location {
        font-size: 1.25em;
        font-weight: 400;
        letter-spacing: 0.16px;
        color: #333e48;
      }
    }

    &-nav {
      @include flexbox();
      @include align-items(flex-start);
      @include justify-content(flex-start);

      &-list {
        width: 18em;
        list-style: none;

        &-item {
          width: 100%;

          &-title {
            margin-bottom: emcalc(2, 1.4);
            font-size: 1.4em;
            font-weight: 600;
            letter-spacing: 0.07px;
            color: var(--text-headers);
          }

          &-link {
            margin-bottom: emcalc(1.8, 1.4);
            font-size: 1.3em;
            font-weight: 400;
            letter-spacing: 0.1px;
            color: #49525c;
            cursor: pointer;

            &:hover {
              text-decoration: underline;
            }
          }
        }
      }
    }
  }

  &-bottom {
    padding-top: 3.2em;
    border-top: solid 2px #ebeaeb;

    &-top {
      @include flexbox();
      @include align-items(flex-start);
      @include justify-content(space-between);

      &-list {
        margin-bottom: 3.1em;
        @include flexbox();
        @include align-items(center);
        @include justify-content(flex-start);

        &-item {
          font-size: 1.3em;
          font-weight: 600;
          letter-spacing: normal;
          color: var(--text-headers);

          &:not(:last-of-type) {
            margin-right: emcalc(2.2, 1.3);
          }

          &:hover {
            cursor: pointer;
            text-decoration: underline;
          }
        }
      }

      &-link {
        font-size: 1.3em;
        font-weight: 600;
        letter-spacing: normal;
        color: #1263a3;

        &:hover {
          cursor: pointer;
          text-decoration: underline;
        }
      }
    }

    &-copy {
      padding-bottom: 3.2em;
      &-text {
        opacity: 0.71;
        font-size: 1.15em;
        font-weight: 400;
        letter-spacing: 0.14px;
        color: #1d1d1d;
      }
    }
  }
}

.faq {
  padding-top: 10em;
  padding-bottom: 8em;
  @include flexbox();
  @include flex-direction(column);
  @include align-items(center);
  @include justify-content(space-between);

  &-title {
    margin-bottom: emcalc(6.8, 3.6);
    font-size: 3.6em;
    font-weight: 700;
    font-stretch: normal;
    font-style: normal;
    line-height: 1.22;
    letter-spacing: normal;
    text-align: center;
    color: #0c0e10;
  }
}

.custom-accordion {
  width: 100%;
  max-width: 82.1em;

  &-card {
    padding-bottom: 3.5em;
    border-bottom: solid 1.5px #ebeaeb;
    overflow: hidden;

    &:first-of-type {
      border-top: solid 1.5px #ebeaeb;
    }

    &.open {
      & .custom-accordion-card-header {
        & i {
          transform: rotateZ(180deg);
        }
      }

      & .custom-accordion-card-body {
        //padding-top: 2.6em;
        max-height: 1000px;
        transition: max-height 0.4s ease-in-out, padding-top 0.4s ease-in-out;

        &-content {
          opacity: 1;
          visibility: visible;
          transition: opacity 0.4s ease-in-out, visibility 0.4s ease-in-out;
        }
      }
    }

    &-header {
      padding: 3.5em 2.8em 0;
      @include flexbox();
      @include align-items(center);
      @include justify-content(space-between);

      &-text {
        font-size: 1.7em;
        font-weight: 600;
        letter-spacing: 0.04px;
        color: #1f242c;
      }

      & i {
        font-size: 2em;
        color: #535565;
        transition: transform 0.4s ease-in-out;
      }
    }

    &-body {
      //padding-top: 3.5em;
      height: auto;
      max-height: 0;
      transition: max-height 0.4s cubic-bezier(0, 1, 0, 1),
        padding-top 0.4s cubic-bezier(0, 1, 0, 1);

      &-content {
        padding: 2.8em 2.8em 0;
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.4s cubic-bezier(0, 1, 0, 1),
          visibility 0.4s cubic-bezier(0, 1, 0, 1);
      }

      &-text {
        opacity: 0.87;
        font-size: 1.5em;
        font-weight: 400;
        letter-spacing: 0.04px;
        color: #1f242c;

        &:not(:last-of-type) {
          margin-bottom: emcalc(2.2, 1.5);
        }
      }
    }
  }
}

#home {
  & .feature {
    &.feature-01 {
      & .feature-main-title {
        max-width: emcalc(35, 3.4);
      }
      & .feature-main-text {
        max-width: emcalc(44.1, 1.6);
      }
    }

    &.feature-02 {
      & .feature-main-title {
        max-width: emcalc(44, 3.4);
      }
      & .feature-main-text {
        max-width: emcalc(39.5, 1.6);
      }
    }
  }
}

#team-members {
  padding-top: 13.3em;
  & .feature {
    &-hero {
      padding-top: 0;
      & .feature-media {
        font-size: 0.955em;
      }

      & .feature-main {
        max-width: 44em;

        &-subtitle {
          margin-bottom: emcalc(1.4, 1.6);
          font-size: 1.6em;
          font-weight: 600;
          letter-spacing: normal;
          color: #2e332f;
        }

        &-title {
          margin-bottom: emcalc(4.2, 4.2);
          font-size: 4.2em;
          font-weight: 700;
          line-height: 1.31;
          letter-spacing: 0.11px;
          color: #000000;
        }

        &-buttons {
          & .button {
            width: emcalc(15.5, 1.4);
            height: emcalc(4, 1.4);

            &:not(:last-of-type) {
              margin-right: emcalc(1.6, 1.4);
            }
          }
        }
      }
    }

    &.feature-01 {
      background-color: rgba(248, 248, 248, 0.54);
      border-top: solid 1.5px #f0f0f0;
      border-bottom: solid 1.5px #f0f0f0;

      & .feature-main-title {
        max-width: emcalc(36.1, 3.4);
      }
      & .feature-main-text {
        max-width: emcalc(42.1, 1.6);
      }
    }

    &.feature-02 {
      & .feature-main-title {
        max-width: emcalc(42.1, 3.4);
      }
      & .feature-main-text {
        max-width: emcalc(42.1, 1.6);
      }
    }

    &.feature-03 {
      background-color: rgba(248, 248, 248, 0.54);
      border-top: solid 1.5px #f0f0f0;
      border-bottom: solid 1.5px #f0f0f0;

      & .feature-main-title {
        max-width: emcalc(32, 3.4);
      }
      & .feature-main-text {
        max-width: emcalc(42.1, 1.6);
      }
    }

    &.feature-04 {
      & .feature-main-title {
        max-width: emcalc(31.3, 3.4);
      }
      & .feature-main-text {
        max-width: emcalc(42.1, 1.6);
      }
    }
  }

  & .dashboard {
    padding-top: 6em;
    padding-bottom: 6em;
    background-color: #f8f8f8;
    background-image: none;

    &-text {
      max-width: emcalc(67.2, 1.55);
    }
  }
}
